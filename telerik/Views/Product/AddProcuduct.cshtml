@using Kendo.Mvc.UI
@model Product

@{
    Layout = null;
}

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>

<script>
    function onUploadSuccess(e) {
        if (e.response && e.response.success) {
            const imageUrl = e.response.imageUrl;
            $('input[name="ImageUrl"]').val(imageUrl);
        } else {
            console.error("Upload failed:", e.response.message || "Unknown error");
        }
    }
</script>

<form method="post" id="productForm" class="productForm">

<div class="create-container">
    @Html.HiddenFor(m => m.ProductID)

        @Html.AntiForgeryToken()

    <div class="create-container-input">
        @Html.LabelFor(m => m.ProductName, "Product Name", new { @style = "font-size:16px" })
    </div>
    <div class="create-container-input">
        @Html.TextBoxFor(m => m.ProductName, new { @style = "width: 400px; margin-bottom:20px; margin-top: 10px" })
        @Html.ValidationMessageFor(m => m.ProductName)
    </div>

    <div class="k-edit-label">
        @Html.LabelFor(m => m.UnitPrice, "Price Per Unit", new { @style = "font-size:16px" })
    </div>
    <div class="k-edit-field">
        @Html.TextBoxFor(m => m.UnitPrice, new { @style = "width: 400px; margin-bottom:20px; margin-top:10px" })
        @Html.ValidationMessageFor(m => m.UnitPrice)
    </div>

    <div class="k-edit-label">
        @Html.LabelFor(m => m.UnitsInStock, "Units In Stock", new { @style = "font-size:16px" })
    </div>
    <div class="k-edit-field">
        @Html.TextBoxFor(m => m.UnitsInStock, new { @style = "width: 400px; margin-bottom:20px; margin-top:10px" })
        @Html.ValidationMessageFor(m => m.UnitsInStock)
    </div>

    <div class="k-edit-label">
        @Html.LabelFor(m => m.Discontinued, new { @style = "font-size:16px; margin-bottom: 10px" })
    </div>
    <div class="k-edit-field">
        @Html.CheckBoxFor(m => m.Discontinued, new { @style = "margin-bottom: 20px" })
    </div>

    <div class="k-edit-label">
        @Html.LabelFor(m => m.CategoryID, "Category", new { @style = "font-size:16px" })
    </div>
    <div class="k-edit-field">
        @Html.DropDownListFor(
                m => m.CategoryID,
                new SelectList((IEnumerable<dynamic>)ViewBag.CategoryList, "CategoryID", "CategoryName"),
                "Select category...",
                new { @style = "width: 400px; height: 25px; margin-top:10px; margin-bottom: 20px" }
                )
        @Html.ValidationMessageFor(m => m.CategoryID)
    </div>

    <div class="k-edit-label">
        <label for="ImageFile" style="margin-bottom: 10px; font-size: 16px">Upload Image</label>
    </div>
    <div class="k-edit-field" style="width: 40px">

        @Html.HiddenFor(m => m.ImageUrl)

            @(Html.Kendo().Upload()
                        .Name("ImageFile")
                        .Async(a => a
                        .Save("UploadImage", "Product")
                        .AutoUpload(true)
                        )
                        .Events(e => e.Success("onUploadSuccess"))
                        .Multiple(false)
                        .ShowFileList(true)
                        )

    </div>

</div>

    <button type="submit" onclick="submitForm(event)" class="submit-button">Submit</button>


</form>


    <script>
      function submitForm(event) {
          if (event) event.preventDefault();

          const token = $('input[name="__RequestVerificationToken"]').val();

          $.ajax({
              url: '@Url.Action("Grid_CreateOrUpdate", "Product")',
              type: 'POST',
              data: $('#productForm').serialize(),
              headers: {
                  'RequestVerificationToken': token
              },
                  success: function (response) {
        const grid = $("#gridProduct").data("kendoGrid");
        if (grid) grid.dataSource.read();

        const item = Array.isArray(response) ? response[0] : null;
        const hasErrors = item && item.Errors && Object.keys(item.Errors).length > 0;

        if (hasErrors) {
            Swal.fire({
                icon: "error",
                title: "Error",
                text: "Some fields are invalid. Please fix and try again."
            });
        } else {
             const win = $("#window").data("kendoWindow");
                if (win) win.close();

                // Optionally reload or refresh grid
                location.reload();  // or remove if you want just grid refresh
            // Show success alert first
            Swal.fire({
             
                icon: "success",
                title: "Success",
                text: "Product saved successfully."

            });
        }
    }

          });
      }

</script>

<style>
    .productForm {
        width:450px;
        height: 550px;
    }
    .submit-button {
        background-color: white;
        width: 100px;
        height: 40px;
        border: 1px solid grey;
        border-radius:10px;
    }
</style>