@model IEnumerable<telerik.Models.Product>
@using telerik.Models

@{
    var totalPages = ViewBag.TotalPages as int? ?? 1;
    var currentPage = ViewBag.CurrentPage as int? ?? 1;
    var categories = (List<Category>)ViewBag.CategoryList;
    var selectedCategories = ViewBag.SelectedCategories as List<int> ?? new List<int>();

    string categoryQuery = selectedCategories.Any()
        ? string.Join("&", selectedCategories.Select(id => $"categoryIds={id}"))
        : "";
}

<h1 style="text-align:center;">Shop</h1>
<div class="order">

    <div class="category-filters" style="text-align:center; margin-bottom: 20px;">
        <form id="filterForm" method="get" action="/Product/Shop">
            <input type="hidden" name="page" value="1" />
            <div id="categoryInputs">
                @foreach (var id in selectedCategories)
                {
                    <input type="hidden" name="categoryIds" value="@id" />
                }
            </div>
        </form>

        @foreach (var category in categories)
        {
            var isSelected = selectedCategories.Contains(category.CategoryID);
            var buttonStyle = isSelected
            ? "background-color: #007bff; color: white;"
            : "background-color: white; color: #007bff;";
            <button class="category-btn"
                    data-categoryid="@category.CategoryID"
                    style="@buttonStyle">
                @category.CategoryName
            </button>
        }
    </div>

    <div class="order-cards @(Model.Count() == 1 ? "single-product" : "")">
        @foreach (var product in Model)
        {
            <div class="order-card" data-categoryid="@product.CategoryID">
                <div class="order-card-inner">
                    <div class="order-card-front">
                        <img src="@product.ImageUrl" alt="@product.ProductName" />
                    </div>
                    <div class="order-card-back">
                        <h2 class="order-card-title">@product.ProductName</h2>
                        <div class="order-card-layout">
                            <p><strong>Name:</strong> @product.ProductName</p>
                            <p><strong>Price:</strong> @product.UnitPrice.ToString() €</p>
                            <p><strong>Category:</strong> @product.Category?.CategoryName</p>
                            <p><strong>Units On Stock:</strong> @product.UnitsInStock</p>
                            <p><strong>Limited:</strong> @(product.Discontinued ? "Yes" : "No")</p>
                            <div class="order-card-layout-buttons">
                                <a class="order-card-layout-addToCart"
                                   asp-controller="Order"
                                   asp-action="Create"
                                   asp-route-productId="@product.ProductID">
                                    <p class="order-text">Order</p>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="pagination">
        @for (int i = 1; i <= totalPages; i++)
        {
            var url = Url.Action("Shop", "Product", new { page = i }) +
            (string.IsNullOrEmpty(categoryQuery) ? "" : "&" + categoryQuery);
            <a href="@url" class="@(i == currentPage ? "active" : "")">@i</a>
        }
    </div>

</div>

<!-- Scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(function () {
        let selectedCategories = new Set();

        // Load selected from initial page
        @foreach (var catId in selectedCategories)
        {
                <text>selectedCategories.add(@catId);</text>
        }

        $(".category-btn").click(function (e) {
            e.preventDefault();
            const categoryId = $(this).data("categoryid");

            if (selectedCategories.has(categoryId)) {
                selectedCategories.delete(categoryId);
                $(this).css({ "background-color": "white", "color": "#007bff" });
            } else {
                selectedCategories.add(categoryId);
                $(this).css({ "background-color": "#007bff", "color": "white" });
            }

            const container = $("#categoryInputs");
            container.empty();

            selectedCategories.forEach(id => {
                container.append(`<input type="hidden" name="categoryIds" value="${id}" />`);
            });

            $("#filterForm").submit();
        });
    });
</script>

<!-- Styles -->
<style>
    .category-filters {
        margin-top: 20px;
    }

    .category-btn {
        margin: 0 8px 8px 0;
        padding: 8px 12px;
        border-radius: 6px;
        color: #007bff;
        border: 1px solid #007bff;
        cursor: pointer;
    }

    .order-cards {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        padding: 30px 0;
        gap: 50px;
    }

    .order-card {
        width: 250px;
        height: 400px;
        perspective: 1000px;
    }

    .order-card-inner {
        position: relative;
        width: 100%;
        height: 100%;
        transition: transform 0.8s;
        transform-style: preserve-3d;
        border-radius: 15px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    .order-card:hover .order-card-inner {
        transform: rotateY(-180deg);
    }

    .order-card-front,
    .order-card-back {
        position: absolute;
        width: 100%;
        height: 100%;
        backface-visibility: hidden;
        border-radius: 15px;
        overflow: hidden;
    }

    .order-card-front {
        background-color: #fff;
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .order-card-front img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 15px;
        }

    .order-card-back {
        background-color: white;
        color: black;
        transform: rotateY(180deg);
        padding: 20px;
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .order-card-layout-addToCart {
        text-decoration: none;
    }

    .order-text {
        text-align: center;
        text-decoration: none !important;
        margin-top: auto;
        padding: 10px 0px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        width: 100%;
    }

    .order-cards.single-product {
        justify-content: flex-start;
        padding-left: 50px;
    }

    .pagination {
        display: flex;
        justify-content: center;
        margin: 40px 0 60px;
        gap: 10px;
    }

        .pagination a {
            padding: 8px 14px;
            border: 1px solid #007bff;
            border-radius: 4px;
            color: #007bff;
            text-decoration: none;
            font-weight: bold;
        }

            .pagination a.active {
                background-color: #007bff;
                color: white;
            }
</style>
